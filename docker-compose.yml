version: '3.9'
services:
  api:
    build: ./backend/api
    ports:
      - "3000:3000"
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy

  archiver:
    build: ./backend/archiver
    environment:
      - DATABASE_URL=postgresql://postgres:mysecurepassword@postgres:5432/probo?schema=public
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy

  engine:
    build: ./backend/engine
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy

  websocket:
    build: ./backend/websocket
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_healthy

  frontend:
    build: ./frontend
    ports:
      - "3001:3000"
    depends_on:
      api:
        condition: service_started
      websocket:
        condition: service_started

  postgres:
    image: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecurepassword
      POSTGRES_DB: probo
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 5

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092" ]
      interval: 10s
      timeout: 10s
      retries: 5

  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test: [ "CMD", "echo", "ruok", "|", "nc", "localhost", "2181", "|", "grep", "imok" ]
      interval: 5s
      timeout: 5s
      retries: 5
